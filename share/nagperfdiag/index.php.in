<?php
##
## Program: PNP , Performance Data Addon for Nagios(r)
## Version: $Id: index.php.in 416 2008-03-29 18:54:58Z pitchfork $
## License: GPL
## Copyright (c) 2006-2008 Joerg Linge (http://www.pnp4nagios.org)
##
## This program is free software; you can redistribute it and/or
## modify it under the terms of the GNU General Public License
## as published by the Free Software Foundation; either version 2
## of the License, or (at your option) any later version.
##
## This program is distributed in the hope that it will be useful,
## but WITHOUT ANY WARRANTY; without even the implied warranty of
## MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
## GNU General Public License for more details.
##
## You should have received a copy of the GNU General Public License
## along with this program; if not, write to the Free Software
## Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
##
error_reporting( E_ALL^ E_NOTICE );
require( 'include/function.inc.php' );
require( 'include/debug.php' );
require( 'include/base.php');

$config = "@CFG_DIR@config";
if ( is_readable( $config.".php" ) ) {
    include( $config.".php" );
}
else {
    die( "<b>$config.php</b> not found" );
}
if ( is_readable( $config."_local.php" ) ) {
    include( $config."_local.php" );
}
if ( !isset( $conf['template_dir'] ) ) {
    $conf['template_dir'] = dirname( __file__ );
}
if ( is_readable( './lang/lang_'.$conf['lang'].'.php' ) ) {
    include( './lang/lang_'.$conf['lang'].'.php' );
}
else {
    include( './lang/lang_en.php' );
}

nagperfdiag::logMessage ("index.php called", __FILE__, __LINE__, LOG_DEBUG);

# Debugger init
$debug = new check;
$debug->doCheck( "rrdtool" );
$debug->doCheck( "p_open" );
$debug->doCheck( "fpassthru" );
$debug->doCheck( "xml_parser_create" );
$debug->doCheck( "zlib" );
$debug->doCheck( "gd" );
$debug->doCheck( "rrdbase" );
# Variablen aus der URL auslesen
if ( isset( $_GET['display'] ) ) {
    $display = doClean( $_GET['display'] );
}
else {
    $display = "service";
}
# Get the Hostname
if ( isset( $_GET['host'] ) ) {
    $hostname = doClean( $_GET['host'] );
}
else {
    $hostname = getFirstHost( );
}
# Get the service description
if ( isset( $_GET['srv'] ) ) {
    $servicedesc = doClean( $_GET['srv'] );
}
else {
    if ( isAuthorizedFor( 'host_overview' ) == 1 ) {
        $servicedesc = getFirstService( $conf['rrdbase'],$hostname );
        $display = "host_list";
    }
    else {
        $servicedesc = getFirstService( $conf['rrdbase'],$hostname );
        $display = "service";
    }
}
# Get the source for mutigraphs
if ( isset( $_GET['source'] ) ) {
    $source = doClean( $_GET['source'] );
}
else {
    $source = "1";
}
# Get the timerange or default to $conf['overview-range']
if ( isset( $_GET['view'] ) ) {
    $view = doClean( $_GET['view'] );
    if ( $view >= sizeof( $views ) ) {
        $view = $conf['overview-range'];
    }
}
else {
    $view = $conf['overview-range'];
}
if ( isset( $_GET['allviews'] ) ) {
    $view = 0;
    $allviews = 1;
}
if ( isset( $_GET['start'] ) ) {
    $start = doClean( $_GET['start'] );
}
else {
    $start = "";
}
if ( isset( $_GET['end'] ) ) {
    $end = doClean( $_GET['end'] );
}
else {
    $end = "";
}
$timerange = getTimeRange( $start,$end,$view );
if ( isset( $_GET['do'] ) ) {
    $do = doClean( $_GET['do'] );
}
else {
    $do = 'html';
}
if ( isset( $_GET['page'] ) ) {
    $page = doCleanPage( $_GET['page'] );
    $display = "page";
}
if ( $display == "page" ) {
    $data = doDataArray( $display );
    $debug_data = doImage( "QUIET",$data );
    doPage( $display,$do,$data );
    exit;
}
if ( $display == "service" ) {
    $debug->doCheck( "hostname",$hostname );
    $debug->doCheck( 'directory',$conf['rrdbase'].$hostname );
    $debug->doCheck( "servicedesc",$servicedesc );
    $rrdfile = $conf['rrdbase']."$hostname/$servicedesc.rrd";
    $debug->doCheck( "rrdfile",$rrdfile );
    $data = doDataArray( $display );
    $debug_data = doImage( "QUIET",$data );
    doPage( $display,$do,$data );
    exit;
}
if ( $display == "host_list" ) {
    $debug->doCheck( "hostname",$hostname );
    $debug->doCheck( 'directory',$conf['rrdbase'].$hostname );
    $debug->doCheck( "servicedesc",$servicedesc );
    $data = doDataArray( $display );
    doPage( $display,$do,$data );
    exit;
}
if ( $display == "image" ) {
    $rrdfile = $conf['rrdbase']."$hostname/$servicedesc.rrd";
    $debug->doCheck( "rrdfile",$rrdfile );
    $rrddef = $conf['rrdbase'].$hostname."/".$servicedesc.".xml";
    $debug->doCheck( "rrddef",$rrddef );
    $data = doDataArray( "image" );
    doImage( 'STDOUT',$data );
    exit;
}
if ( $display == "xml" ) {
    $rrdfile = $conf['rrdbase']."$hostname/$servicedesc.rrd";
    $debug->doCheck( "rrdfile",$rrdfile );
    $rrddef = $conf['rrdbase'].$hostname."/".$servicedesc.".xml";
    doXML( $rrddef );
    exit;
}
/* vim: set ai tabstop=4 shiftwidth=4 expandtab: */
?>
